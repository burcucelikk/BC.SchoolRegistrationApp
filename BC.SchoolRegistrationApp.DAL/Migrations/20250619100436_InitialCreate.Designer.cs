// <auto-generated />
using BC.SchoolRegistrationApp.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BC.SchoolRegistrationApp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619100436_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("ID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.ClassLesson", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<int>("LessonID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.HasIndex("LessonID");

                    b.HasIndex("TeacherID");

                    b.ToTable("ClassLessons");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ExamType")
                        .HasColumnType("int");

                    b.Property<int>("LessonID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LessonID");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Grade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ExamID")
                        .HasColumnType("int");

                    b.Property<int>("LessonID")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.HasIndex("LessonID");

                    b.HasIndex("StudentID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Lesson", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.LessonSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClassLessonID")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("LessonHour")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClassLessonID");

                    b.ToTable("LessonSchedules");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<bool>("IsPassed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Photograph")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("LessonID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LessonID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.ClassLesson", b =>
                {
                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Class", "Class")
                        .WithMany("ClassLessons")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Lesson", "Lesson")
                        .WithMany("ClassLessons")
                        .HasForeignKey("LessonID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Teacher", "Teacher")
                        .WithMany("ClassLessons")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Lesson");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Exam", b =>
                {
                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Lesson", "Lesson")
                        .WithMany("Exams")
                        .HasForeignKey("LessonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Grade", b =>
                {
                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Exam", "Exam")
                        .WithMany("Grades")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Lesson", "Lesson")
                        .WithMany("Grades")
                        .HasForeignKey("LessonID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.LessonSchedule", b =>
                {
                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.ClassLesson", "ClassLesson")
                        .WithMany("LessonSchedules")
                        .HasForeignKey("ClassLessonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassLesson");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Student", b =>
                {
                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Teacher", b =>
                {
                    b.HasOne("BC.SchoolRegistrationApp.Entity.Entities.Lesson", "Lesson")
                        .WithMany("Teachers")
                        .HasForeignKey("LessonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Class", b =>
                {
                    b.Navigation("ClassLessons");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.ClassLesson", b =>
                {
                    b.Navigation("LessonSchedules");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Exam", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Lesson", b =>
                {
                    b.Navigation("ClassLessons");

                    b.Navigation("Exams");

                    b.Navigation("Grades");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("BC.SchoolRegistrationApp.Entity.Entities.Teacher", b =>
                {
                    b.Navigation("ClassLessons");
                });
#pragma warning restore 612, 618
        }
    }
}
